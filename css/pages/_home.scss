@use '../abstracts' as a;

.reveal {
  position: relative;
  opacity: 0;
}
.reveal.active {
  opacity: 1;
}
.active.fade-top {
  animation: fade-top 1s ease-in;
}
.active.fade-bottom {
  animation: fade-bottom 1s ease-in;
}
.active.fade-left {
  animation: fade-left 1s ease-in;
}
.active.fade-right {
  animation: fade-right 1s ease-in;
}
@keyframes fade-top {
  0% {
    transform: translateY(-50px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes fade-bottom {
  0% {
    transform: translateY(50px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes fade-left {
  0% {
    transform: translateX(-100px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}
@keyframes fade-right {
  0% {
    transform: translateX(100px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

// Section - Hero
// TODO: Hero Buttons could be spaced less vertically on mobile
.section--hero {
  background-color: #f2f2e9;
  padding-block: 6rem;

  .button--primary,
  .button--secondary {
    // Make buttons same size when small screen, since they stack vertically
    width: 100%;
    margin-inline: 0;
    margin-bottom: 2rem;

    @include a.breakpoint(xs) {
      width: unset;
    }

    @include a.breakpoint(lg) {
      // width: unset;
      margin-bottom: 5rem;
    }
  }

  .button--primary {
    margin-right: 1.5rem;
  }
}

.hero__container {
  display: grid;
  grid-template-columns: 1fr;
  column-gap: 3rem;
  row-gap: 4rem;
  align-items: center;
  justify-items: center;
  width: min(100% - 2rem, 81.25rem);
  margin: 0 auto;
  text-align: center;

  @include a.breakpoint(lg) {
    grid-template-columns: repeat(2, 1fr);
    column-gap: 4rem;
    row-gap: 6rem;
    text-align: left;
  }
}

.hero__description {
  font-size: 1.25rem;
  line-height: 1.6;
  margin-bottom: 3rem;
}

.hero__image-container {
  width: 50%;

  @include a.breakpoint(lg) {
    width: 100%;
  }
}

// Section - Featured In
// TODO: Logos could be handled more elegantly rather than just wrapping
.section--featured {
  padding-block: 3rem;
}

.featured-logos {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-around;
  gap: 2rem;
}

.featured-logos > img {
  height: 1.25rem;
  filter: brightness(0%) opacity(50%);

  @include a.breakpoint(lg) {
    height: 2rem;
  }
}

// Section - How it Works
.section--how {
  padding-block: 6rem;
}

.steps__container {
  display: grid;
  grid-template-columns: 1fr;
  column-gap: 3rem;
  row-gap: 4rem;
  justify-items: center;
  align-items: center;

  @include a.breakpoint(sm) {
    grid-template-columns: repeat(2, 1fr);

    // Once we reach a 2-column layout.
    // 2nd child becomes the first item, and 5th becomes the last
    > :nth-child(2) {
      order: -1;
    }

    > :nth-child(5) {
      order: 1;
    }
  }

  @include a.breakpoint(lg) {
    column-gap: 4rem;
    row-gap: 6rem;
  }

  .step__number {
    color: a.$color-grey-2;
    font-size: 5.375rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
  }

  .step__description {
    font-size: 1.125rem;
    line-height: 1.8;
  }

  .step__image-container {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;

    &::before,
    &::after {
      content: '';
      position: absolute;
      aspect-ratio: 1;
      border-radius: 50%;
    }
    &::before {
      background-color: #fae5d3;
      width: 55%;
      z-index: -1;
      animation: pulse 4s alternate infinite;
    }

    &::after {
      background-color: #fdf2e9;
      width: 75%;
      z-index: -2;
      animation: pulse 4s alternate infinite;
    }

    img {
      width: 45%;
      transition: 0.3s ease-in-out;
      // animation: rotate 6s alternate infinite;
      filter: drop-shadow(0 5px 5px rgba(0, 0, 0, 0.5));

      &:hover {
        transform: scale(1.05) rotate(2deg);
      }
    }
  }
}

@keyframes pulse {
  from {
    transform: scale(1);
  }

  to {
    transform: scale(1.1);
  }
}

@keyframes rotate {
  from {
    transform: scale(1) rotate(0);
  }

  to {
    transform: scale(1.025) rotate(1deg);
  }
}

// Section - Meals
.section--meals {
  padding-block: 6rem;

  // TODO: Easier way to make responsive
  // TODO: Perhaps don't use a "re-usable" Grid class!
  .grid {
    column-gap: 3rem;
    row-gap: 4rem;

    @include a.breakpoint(sm) {
      grid-template-columns: repeat(2, 1fr);
    }

    @include a.breakpoint(lg) {
      grid-template-columns: repeat(3, 1fr);
      column-gap: 4rem;
      row-gap: 6rem;
    }

    > :last-child {
      grid-row: 3;
      justify-self: center;

      @include a.breakpoint(sm) {
        grid-row: 2;
        grid-column: 1 / span 2;
      }

      @include a.breakpoint(lg) {
        grid-row: 1;
        grid-column-start: 3;
        justify-self: auto;
      }
    }
  }
}

// Section - Diets
.all-recipes {
  font-size: 1.125rem;
  text-align: center;
}

// Section - Testimonials
.section--testimonials {
  display: grid;
  grid-template-columns: 1fr;
  column-gap: 3rem;
  row-gap: 4rem;
  align-items: center;
  background-color: a.$color-grey-1;

  // Testimonials left half, gallery right half on lg
  @include a.breakpoint(lg) {
    grid-template-columns: 55fr 45fr;
    column-gap: 4rem;
    row-gap: 6rem;
  }
}

// Padding around only Testimonials -- NOT Gallery
.testimonials__container {
  padding: 6rem 2rem;

  // Add more padding at lg
  @include a.breakpoint(xl) {
    padding: 6rem;
  }
}

.testimonials {
  display: grid;
  grid-template-columns: 1fr;
  column-gap: 3rem;
  row-gap: 4rem;

  @include a.breakpoint(md) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include a.breakpoint(lg) {
    column-gap: 4rem;
    row-gap: 6rem;
  }
}

.testimonials__gallery {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1rem;
  padding: 1rem;

  @include a.breakpoint(md) {
    grid-template-columns: repeat(6, 1fr);
  }

  @include a.breakpoint(lg) {
    // Real website uses 2 columns here -- I think that's ugly!
    // grid-template-columns: repeat(2, 1fr);
    grid-template-columns: repeat(3, 1fr);
  }

  @include a.breakpoint(xl) {
    grid-template-columns: repeat(3, 1fr);
  }
}

.gallery-item {
  // So when we enlarge the img on hover, the contents don't bleed out
  overflow: hidden;

  &:hover img {
    transform: scale(1.1);
  }

  img {
    transition: 0.3s ease-in-out;
  }
}

// Section - Pricing
.section--pricing {
  padding-block: 6rem;
}

// Pricing Cards
.pricing-grid {
  display: grid;
  grid-template-columns: 1fr;
  column-gap: 3rem;
  row-gap: 4rem;
  margin-bottom: 3rem;

  @include a.breakpoint(sm) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include a.breakpoint(md) {
    column-gap: 4rem;
    row-gap: 6rem;
  }
}

// TODO: Font could be smaller on medium 2-column layout
.pricing-plan {
  border-radius: 0.6875rem;
  padding: 3rem;
  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.2);

  @include a.breakpoint(lg) {
    width: 75%;
  }

  &--starter {
    outline: 2px solid a.$color-grey-1;

    @include a.breakpoint(lg) {
      justify-self: right;
    }
  }

  &--complete {
    position: relative;
    background-color: a.$color-grey-1;
    overflow: hidden;
    box-shadow: 0 7px 7px rgba(0, 0, 0, 0.3);

    // TODO: This breaks on small sizes
    &::after {
      content: 'BEST VALUE';
      display: block;
      position: absolute;
      top: 5%;
      right: -8%;
      font-size: 0.875rem;
      font-weight: 700;
      color: a.$color-grey-7;
      padding: 0.5rem 2.5rem;
      transform: rotate(45deg);
      background: linear-gradient(-45deg, #ffd43b, a.$color-primary-5);
      background-size: 200% 200%;
      animation: gradient 6s ease infinite;
    }
  }
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

// TODO: plan is not actually a class: Just using it for organization -- is this bad?!
.plan {
  // Header holds name, price, text
  &__header {
    text-align: center;
    margin-bottom: 3rem;
  }

  &__name {
    color: a.$color-primary-6;
    font-weight: 600;
    font-size: 1.25rem;
    letter-spacing: 0.75;
    text-transform: uppercase;
    margin-bottom: 2rem;
  }

  &__price {
    color: a.$color-grey-7;
    font-size: 3.875rem;
    font-weight: 600;
    margin-bottom: 1rem;

    & span {
      font-size: 1.875rem;
      font-weight: 500;
      margin-right: 0.5rem;
    }
  }

  &__text {
    color: a.$color-grey-3;
    font-size: 1rem;
    line-height: 1.6;
  }

  &__list {
    list-style-type: none;

    .list-item {
      font-size: 1.125rem;
      display: flex;
      align-items: center;
      gap: 1rem;

      &:not(:last-child) {
        margin-bottom: 1rem;
      }
    }

    .list-icon {
      color: a.$color-primary-5;
      font-size: 1.875rem;
    }
  }

  &__details {
    font-size: 1rem;
    line-height: 1.6;
    text-align: center;
    margin-bottom: 6rem;
  }
}

// Feature sub-section
.feature-grid {
  display: grid;
  grid-template-columns: 1fr;
  column-gap: 3rem;
  row-gap: 4rem;

  @include a.breakpoint(sm) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include a.breakpoint(lg) {
    grid-template-columns: repeat(4, 1fr);
    column-gap: 4rem;
    row-gap: 6rem;
  }
}

.feature {
  &__icon {
    font-size: 2rem;
    color: a.$color-primary-5;
    background-color: a.$color-grey-1;
    border-radius: 50%;
    padding: 1rem;
    margin-bottom: 2rem;
  }

  &__title {
    font-size: 1.5rem;
    font-weight: 700;
    color: a.$color-grey-7;
    margin-bottom: 1rem;
  }

  &__text {
    font-size: 1.125rem;
    line-height: 1.8;
  }
}

.section--cta {
  margin-top: 3rem;
  margin-bottom: 8rem;
}

.cta {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 256px auto;
  border-radius: 0.6875rem;
  // Need to hide overflow so image also has rounded corners
  overflow: hidden;
  box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.15);
  background: linear-gradient(to bottom right, a.$color-primary-5, a.$color-primary-6);

  @include a.breakpoint(md) {
    grid-template-columns: 2fr 1fr;
    grid-template-rows: auto;
  }

  .image-container {
    background: linear-gradient(to bottom right, rgba(235, 151, 78, 0.35), rgba(230, 125, 34, 0.35)),
      url('../images/eating.jpg');
    background-position: center;
    background-size: cover;
  }

  .text-container {
    color: #45260a;
    padding: 1rem 1.25rem 1.25rem 1.25rem;

    @include a.breakpoint(md) {
      padding: 3rem 4rem 4rem 4rem;
      order: -1;
    }
  }

  // We want to alter the re-usable heading a tiny bit
  .heading--secondary {
    color: #45260a;
    margin-bottom: 2rem;
  }

  &__text {
    font-size: 1.125rem;
    line-height: 1.8;
    margin-bottom: 3rem;
  }
}

.footer {
  padding-block: 8rem;

  .grid--footer {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-template-areas:
      'nav1 nav1 nav2 nav2 nav3 nav3'
      'logo logo logo address address address';
    column-gap: 1rem;
    row-gap: 3.2rem;

    @include a.breakpoint(lg) {
      grid-template-columns: repeat(2, 1.5fr) repeat(3, 1fr);
      grid-template-areas: 'logo address nav1 nav2 nav3';
    }
  }

  &__heading {
    font-size: 1.125rem;
    font-weight: 500;
    margin-bottom: 2.5rem;
  }

  &__nav {
    list-style-type: none;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  &__contacts {
    font-size: 1rem;
    font-style: normal;
    line-height: 1.6;
  }

  &__logo {
    display: block;
    margin-bottom: 2rem;

    img {
      height: 1.375rem;
    }
  }

  .social-links {
    list-style-type: none;
    display: flex;
    gap: 1.5rem;
  }

  .social-icon {
    font-size: 1.5rem;
  }

  &__copyright {
    color: #767676;
    font-size: 0.875rem;
    line-height: 1.6;
    margin-top: auto;
  }

  .address {
    margin-bottom: 1.5rem;
  }

  &__link:link,
  &__link:visited {
    color: #767676;
    font-size: 1rem;
    text-decoration: none;
  }

  &__link:hover,
  &__link:active {
    color: a.$color-grey-5;
  }

  nav:nth-of-type(1) {
    grid-area: nav1;
  }

  nav:nth-of-type(2) {
    grid-area: nav2;
  }

  nav:nth-of-type(3) {
    grid-area: nav3;
  }

  .logo-col {
    grid-area: logo;
    // Flex so we can position last element at end
    display: flex;
    flex-direction: column;
  }

  .address-col {
    grid-area: address;
  }
}
